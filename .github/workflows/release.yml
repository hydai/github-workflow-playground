name: release

on:
  push:
    tags:
      - "*"

jobs:
  create:
    name: Create Release
    runs-on: ubuntu-latest
    container:
      image: wasmedge/wasmedge:ubuntu-build-gcc
    outputs:
      version: ${{ steps.prep.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get version
        id: prep
        run: |
          echo ::set-output name=version::$(git describe --tag)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Project ${{ steps.prep.outputs.version }}
          body_path: .CurrentChangelog.md
          draft: true
          prerelease: false

  build_ubuntu_latest:
    needs: create
    runs-on: ubuntu-latest
    container:
      image: wasmedge/wasmedge:ubuntu-build-gcc

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/upload-artifact@v2
      with:
        name: ubuntu-latest.tar.gz
        path: ./output.txt

    - uses: actions/upload-artifact@v2
      with:
        name: ubuntu-latest
        path: ./
  download_artifact_ubuntu_latest:
    runs-on: ubuntu-latest
    needs: build_ubuntu_latest
    container:
      image: wasmedge/wasmedge:ubuntu-build-gcc

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: ubuntu-latest.tar.gz

    - uses: actions/download-artifact@v2
      with:
        name: ubuntu-latest
        path: ./ubuntu-latest

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: ./ubuntu-latest
    - name: Upload files
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create.outputs.upload_url }}
        asset_path: ./ubuntu-latest.tar.gz
        asset_name: Project-${{ needs.create.outputs.version }}.ubuntu-latest.tar.gz

  build_manylinux2014:
    needs: create
    runs-on: ubuntu-latest
    container:
      image: wasmedge/wasmedge:manylinux2014_x86_64

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/upload-artifact@v2
      with:
        name: ubuntu-manylinux2014.tar.gz
        path: ./output.txt

    - uses: actions/upload-artifact@v2
      with:
        name: ubuntu-manylinux2014
        path: ./

  download_artifact_manylinux2014_x86_64:
    runs-on: ubuntu-latest
    needs: build_manylinux2014
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: ubuntu-manylinux2014.tar.gz

    - uses: actions/download-artifact@v2
      with:
        name: ubuntu-manylinux2014
        path: ./ubuntu-manylinux2014

    - name: Display structure of downloaded file
      run: ls -alhR ./ubuntu-manylinux2014.tar.gz

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: ./ubuntu-manylinux2014

    - name: Upload files
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create.outputs.upload_url }}
        asset_path: ./ubuntu-manylinux2014.tar.gz
        asset_name: Project-${{ needs.create.outputs.version }}.ubuntu-manylinux2014.tar.gz

  build_manylinux2010:
    needs: create
    runs-on: ubuntu-latest
    container:
      image: wasmedge/wasmedge:manylinux2010_x86_64

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0

    - uses: actions/upload-artifact@v1
      with:
        name: ubuntu-manylinux2010.tar.gz
        path: ./output.txt

    - uses: actions/upload-artifact@v1
      with:
        name: ubuntu-manylinux2010
        path: ./

  download_artifact_manylinux2010_x86_64:
    runs-on: ubuntu-latest
    needs: build_manylinux2010
    steps:
    - uses: actions/checkout@v1

    - uses: actions/download-artifact@v1
      with:
        name: ubuntu-manylinux2010.tar.gz

    - uses: actions/download-artifact@v1
      with:
        name: ubuntu-manylinux2010
        path: ./ubuntu-manylinux2010

    - name: Display structure of downloaded file
      run: ls -alhR ./ubuntu-manylinux2010.tar.gz

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: ./ubuntu-manylinux2010

    - name: Upload files
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create.outputs.upload_url }}
        asset_path: ./ubuntu-manylinux2010.tar.gz
        asset_name: Project-${{ needs.create.outputs.version }}.ubuntu-manylinux2010.tar.gz

  build_manylinux1:
    needs: create
    runs-on: ubuntu-latest
    container:
      image: wasmedge/wasmedge:manylinux1_x86_64

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 0

    - uses: actions/upload-artifact@v1
      with:
        name: ubuntu-manylinux1.tar.gz
        path: ./output.txt

    - uses: actions/upload-artifact@v1
      with:
        name: ubuntu-manylinux1
        path: ./

  download_artifact_manylinux1_x86_64:
    runs-on: ubuntu-latest
    needs: build_manylinux1
    steps:
    - uses: actions/download-artifact@v1
      with:
        name: ubuntu-manylinux1.tar.gz

    - uses: actions/download-artifact@v1
      with:
        name: ubuntu-manylinux1
        path: ./ubuntu-manylinux1

    - name: Display structure of downloaded file
      run: ls -alhR ./ubuntu-manylinux1.tar.gz

    - name: Display structure of downloaded files
      run: ls -R
      working-directory: ./ubuntu-manylinux1

    - name: Upload files
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create.outputs.upload_url }}
        asset_path: ./ubuntu-manylinux1.tar.gz
        asset_name: Project-${{ needs.create.outputs.version }}.ubuntu-manylinux1.tar.gz
